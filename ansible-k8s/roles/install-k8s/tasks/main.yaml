---
- name: limpar o cache do dnf
  command: dnf clean all

- name: carregar modulos necessarios para Kubernetes
  ansible.builtin.modprobe:
    name: "{{ item }}"
    state: present
  loop: "{{ k8s_modules }}"
  become: true

- name: criar arquivo de configuracao para modulos
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
  become: true
  notify: Recarregar modulos

- name: definir parametros do sysctl
  ansible.builtin.copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
  become: true

- name: aplicar parametros do sysctl sem reiniciar
  ansible.builtin.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop: "{{ k8s_sysctl_params | dict2items }}"
  become: true

- name: desativar swap
  command: swapoff -a
  ignore_errors: true

- name: desativar no fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^.*swap.*'
    state: absent

- name: adicionar o repositorio para containerd
  command: "{{ repo_docker }}"
  ignore_errors: yes

- name: instalar containerd 
  dnf:
    name: "{{ containerd_pacotes }}"
    state: present
    allowerasing: yes

- name: criar diretorio /etc/containerd
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'
  become: true

- name: gerar config em /etc/containerd/config.toml
  ansible.builtin.command:
    cmd: containerd config default
  register: containerd_config
  become: true

- name: escrever configuracao em /etc/containerd/config.toml
  ansible.builtin.copy:
    dest: /etc/containerd/config.toml
    content: "{{ containerd_config.stdout }}"
  become: true

- name: alterar configuracao de SystemdCgroup 
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^.*SystemdCgroup.*$'
    line: '            SystemdCgroup = true'
    backup: yes

- name: iniciar o servico do containerd 
  systemd:
    name: containerd
    enabled: yes
    state: started

- name: criar repo Kubernetes
  copy:
    dest: /etc/yum.repos.d/kubernetes.repo
    content: |
      [kubernetes]
      name=Kubernetes
      baseurl={{ k8s_repo_url }}
      enabled=1
      gpgcheck=1
      gpgkey={{ k8s_gpg_key }}
    owner: root
    group: root
    mode: '0644'

- name: dnf update
  dnf:
    name: "*"
    state: latest

- name: Instalar kubelet, kubeadm, kubectl
  dnf:
    name: "{{ k8s_pacotes }}"
    state: present

- name: Iniciar o servico do kubelet 
  systemd:
    name: kubelet
    enabled: yes
    state: started
